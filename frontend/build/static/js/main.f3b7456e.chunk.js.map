{"version":3,"sources":["hoc/Auxiliary/AuxComponent.js","components/TestItems/TestItem/TestItem.js","components/TestItems/TestItems.js","components/TestExecutionTable/TestExecutionTable.js","axios-api.js","components/TestItemDetails/TestItemDetails.js","components/AddNewRequest/AddNewRequest.js","components/AddNewTest/AddNewTest.js","containers/IONOSTestExecutor/IONOSTestExecutor.js","App.js","serviceWorker.js","index.js"],"names":["auxComponent","props","children","TestItem","className","this","status","ID","requestedBy","createdAt","env_name","path","href","onClick","click","Component","items","map","item","key","id","created_at","requested_by","displayPath","clicked","bind","TestExecutionTable","tests","TestItems","viewItemDetails","instance","axios","create","baseURL","TestItemDetails","currentItem","backClicked","logs","AddNewRequest","type","name","placeholder","value","requester","onChange","requesterChanged","requesterError","env","envChanged","defaultValue","assets","test_envs","envError","multiple","testPath","testPathChanged","available_paths","testPathError","disabled","submitTest","AddNewTest","data-testid","accept","ref","fileInput","newTestFileError","class","role","uploadTestFile","IONOSTestExecutor","state","error","detailsView","itemID","newTestFileStatus","newTestFile","interval","getDisplayPath","val","some","i","refreshList","get","then","response","data","setState","catch","uploadNewTestFile","current","files","length","form","FormData","console","log","append","post","headers","alert","file","finally","updateAssets","itemId","backToListItems","handleTestPathChanged","e","options","target","l","selected","push","React","createRef","setInterval","clearInterval","_","toString","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f3b7456e.chunk.js","sourcesContent":["const auxComponent = (props) => props.children;\r\nexport default auxComponent;","import React, {Component}  from 'react';\r\n\r\nclass TestItem extends Component {\r\n\r\n  render(){\r\n     let className = \"failed\";\r\n     if (this.props.status === \"SUCCESS\") {\r\n         className = 'succeed'\r\n     } else if (this.props.status === \"RUNNING\" || this.props.status === \"CREATED\") {\r\n         className = 'running'\r\n     }\r\n    return (\r\n        <tr className={className}>\r\n            <td>{this.props.ID}</td>\r\n            <td>{this.props.requestedBy}</td>\r\n            <td>{this.props.createdAt}</td>\r\n            <td>{this.props.env_name}</td>\r\n            <td>{this.props.path}</td>\r\n            <td>{this.props.status}</td>\r\n            <td><a href=\"#\" onClick={this.props.click}>View Details</a></td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestItem;","import React from 'react';\r\nimport TestItem from './TestItem/TestItem';\r\n\r\nconst items = (props) => (\r\n  props.items.map((item) => {\r\n    return (\r\n        <TestItem\r\n            key={item.id}\r\n            ID={item.id}\r\n            createdAt={item.created_at}\r\n            env_name={item.env_name}\r\n            requestedBy={item.requested_by}\r\n            status={item.status}\r\n            path={item.displayPath}\r\n            click={props.clicked.bind(this, item.id)}\r\n        />\r\n    );\r\n  })\r\n);\r\n\r\nexport default items;","import React, {Component}  from 'react';\r\nimport TestItems from \"../TestItems/TestItems\";\r\n\r\nclass TestExecutionTable extends Component {\r\n\r\n  render(){\r\n     const tests = <TestItems items={this.props.items} clicked={this.props.viewItemDetails}/>\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <fieldset>\r\n                <legend>Test execution requests</legend>\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                      <th>Request ID</th>\r\n                      <th>Requested By</th>\r\n                      <th>Created At</th>\r\n                      <th>Test Env</th>\r\n                      <th>Test Path</th>\r\n                      <th>Status</th>\r\n                      <th>Details</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {tests}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestExecutionTable;","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://127.0.0.1:8081/api/v1/',\r\n});\r\n\r\nexport default instance;\r\n","import React, {Component}  from 'react';\r\nimport Aux from \"../../hoc/Auxiliary/AuxComponent\";\r\n\r\nclass TestItemDetails extends Component {\r\n\r\n\r\n  render(){\r\n      let className = \"failed\";\r\n     if (this.props.currentItem.status === \"SUCCESS\") {\r\n         className = 'succeed'\r\n     } else if (this.props.currentItem.status === \"RUNNING\" || this.props.currentItem.status === \"CREATED\") {\r\n         className = 'running'\r\n     }\r\n    return (\r\n        <Aux>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <a className=\"btn btn-primary float-right\" href=\"#\" onClick={this.props.backClicked.bind(this)}>Back</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <fieldset>\r\n                  <legend>Test details</legend>\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-striped\">\r\n                      <tbody>\r\n                      <tr>\r\n                        <td className=\"title\">ID</td>\r\n                        <td>{this.props.currentItem.id}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"title\">Requested by</td>\r\n                        <td>{this.props.currentItem.requested_by}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"title\">Env</td>\r\n                        <td>{this.props.currentItem.env_name}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"title\">Path</td>\r\n                        <td>{this.props.currentItem.displayPath}</td>\r\n                      </tr>\r\n                      <tr className={className}>\r\n                        <td className=\"title\">Status</td>\r\n                        <td>{this.props.currentItem.status}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"title\">Logs</td>\r\n                        <td>\r\n                    <pre><code className=\"python\">\r\n                      {this.props.currentItem.logs}\r\n                      </code></pre>\r\n                        </td>\r\n                      </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n        </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestItemDetails;\r\n","import React, {Component}  from 'react';\r\n\r\nclass AddNewRequest extends Component {\r\n\r\n  render(){\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <fieldset>\r\n                <legend>New request</legend>\r\n                <form>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-3 form-group\">\r\n                      <input type=\"text\" className=\"form-control\" name=\"requester\" id=\"requester\"\r\n                             placeholder=\"Requester\" value={this.props.requester} onChange={this.props.requesterChanged.bind(this)}/>\r\n                             <p className=\"error-message\">{this.props.requesterError}</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 form-group\">\r\n                      <select className=\"form-control\" name=\"env_id\" id=\"env_id\" placeholder=\"Environment ID\"\r\n                              value={this.props.env}  onChange={this.props.envChanged.bind(this)}>\r\n                        <option value=\"\" defaultValue></option>\r\n                        {this.props.assets.test_envs.map(item => <option value={item.id} key={item.id}>{item.name}</option>)}\r\n                      </select>\r\n                             <p className=\"error-message\">{this.props.envError}</p>\r\n                    </div>\r\n                    <div className=\"col-md-4 form-group\">\r\n                      <select className=\"form-control\" name=\"test_path\" id=\"test_path\" multiple\r\n                             placeholder=\"Test Path\" value={this.props.testPath}  onChange={this.props.testPathChanged.bind(this)}>\r\n                        <option value=\"\" defaultValue></option>\r\n                        {this.props.assets.available_paths.map(item => <option value={item.id}  key={item.id}>{item.path}</option>)}\r\n                      </select>\r\n                             <p className=\"error-message\">{this.props.testPathError}</p>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      <input type=\"button\" className=\"btn btn-primary\" value=\"Submit\" disabled={this.props.testPath === '' || this.props.requester === '' ||this.props.env === ''} onClick={this.props.submitTest}/>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewRequest;","import React, {Component}  from 'react';\r\n\r\nclass AddNewTest extends Component {\r\n  render(){\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <fieldset>\r\n                <legend>New Test</legend>\r\n                <form>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-10 form-group\">\r\n                      <input type=\"file\"\r\n                        className=\"form-control-file\"\r\n                        data-testid='newTestFile'\r\n                        name=\"newTestFile\"\r\n                        id=\"newTestFile\"\r\n                        accept='.py'\r\n                        ref={this.props.fileInput}\r\n                      />\r\n                      <p className=\"error-message\">{this.props.newTestFileError}</p>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                      {\r\n                        this.props.status === 'uploading' &&  <div class=\"spinner-border text-primary\" role=\"status\"> <span class=\"sr-only\">Loading...</span></div>\r\n                      }\r\n                      {\r\n                        this.props.status === 'idle' &&  <input data-testid='submitButton' type=\"button\" className=\"btn btn-primary\" value=\"Submit\" onClick={this.props.uploadTestFile}/>\r\n                      }\r\n                      \r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewTest;","import React, {Component} from 'react';\n\nimport Aux from '../../hoc/Auxiliary/AuxComponent';\nimport TestExecutionTable from './../../components/TestExecutionTable/TestExecutionTable';\n\nimport axios from './../../axios-api'\nimport TestItemDetails from \"../../components/TestItemDetails/TestItemDetails\";\nimport AddNewRequest from \"../../components/AddNewRequest/AddNewRequest\";\nimport AddNewTest from '../../components/AddNewTest/AddNewTest';\n\n\nclass IONOSTestExecutor extends Component {\n  state = {\n    assets: {test_envs: [], available_paths: []},\n    error: false,\n    items: [],\n    detailsView: false,\n    itemID: null,\n    currentItem: {},\n    requesterError: '',\n    envError: '',\n    testPathError: '',\n    requester: '',\n    env: '',\n    testPath: [],\n    newTestFileStatus: 'idle',\n    newTestFile: '',\n    newTestFileError: ''\n  };\n\n  interval = null\n\n  constructor(props) {\n    super(props)\n    this.fileInput = React.createRef();\n  }\n  updateAssets() {\n    axios.get('assets').then(response => {\n      this.setState({assets: response.data})\n    }).catch(error => {\n      this.setState({error: true})\n    })\n  }\n  componentDidMount () {\n    this.updateAssets()\n\n    this.interval = setInterval(this.refreshList, 1000);\n    this.refreshList()\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getDisplayPath = (path) => {\n    let val = '';\n    this.state.assets.available_paths.map(item => {\n      if (path.some(i => i === item.id)) {\n        val += item.path + ' '\n      }\n    })\n    return val;\n  }\n\n  refreshList = () => {\n    axios.get('test-run').then(response => {\n      let data = response.data;\n      this.setState({items: data.map(item => { return {displayPath: this.getDisplayPath(item.path), ...item}})})\n    }).catch(error => {\n      this.setState({error: true})\n    })\n    if (this.state.itemID !== null){\n      this.viewItemDetails(this.state.itemID)\n    }\n  }\n\n  uploadNewTestFile = () => {\n    if (this.fileInput.current.files.length < 1) {\n      return\n    }\n    let form = new FormData();\n    console.log(this.fileInput.current.files[0])\n    form.append('file', this.fileInput.current.files[0], this.fileInput.current.files[0].name);\n    this.setState({newTestFileStatus: 'uploading'})\n    axios.post('test-file', form, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n    })\n    .then(() => {\n      alert('File uploaded successfully')\n    })\n    .catch(error => {\n      if (error?.response?.data?.file[0]) {\n        alert(error?.response?.data?.file[0])\n      } else {\n        alert('Error uploading file')\n      }\n    })\n    .finally(() => {\n      this.setState({newTestFileStatus: 'idle'})\n\n      this.updateAssets()\n    })\n  }\n\n  submitTest = () => {\n    axios.post('test-run', {requested_by: this.state.requester, env: this.state.env, path: this.state.testPath}).then(response => {\n      this.setState({requester: '', env: '', testPath: ''})\n        this.refreshList()\n      }).catch(error => {\n        this.setState({\n          requesterError: error.data.requested_by,\n          envError: error.data.env,\n          testPathError: error.data.path,\n        })\n      })\n  }\n\n  viewItemDetails = (itemId) => {\n      axios.get('test-run/' + itemId).then(response => {\n        let data = response.data\n        data.displayPath = this.getDisplayPath(response.data.path)\n        this.setState({currentItem: data})\n      }).catch(error => {\n        this.setState({error: true})\n      })\n    this.setState({\n      detailsView: true,\n      itemID: itemId\n    })\n  };\n\n  backToListItems = () => {\n    this.setState({\n      detailsView: false,\n      itemID: null\n    })\n  };\n\n  handleTestPathChanged = (e) => {\n    let options = e.target.options;\n    let value = [];\n    for (let i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    this.setState({testPath: value});\n  }\n\n  render () {\n    if (this.state.detailsView) {\n      return (\n          <TestItemDetails currentItem={this.state.currentItem} backClicked={this.backToListItems}></TestItemDetails>\n      )\n    }\n    return (\n        <Aux>\n          <AddNewTest\n            fileInput={this.fileInput}\n            newTestFileError={this.state.newTestFileError}\n            uploadTestFile={_ => this.uploadNewTestFile()}\n            status={this.state.newTestFileStatus}\n          />\n          <AddNewRequest\n              requester={this.state.requester}\n              requesterError={this.state.requesterError}\n              env={this.state.env}\n              envError={this.state.envError}\n              testPath={this.state.testPath}\n              testPathError={this.state.testPathError}\n              assets={this.state.assets}\n\n              requesterChanged={e => this.setState({ requester: e.target.value?.toString() })}\n              envChanged={e => this.setState({ env: e.target.value?.toString() })}\n              testPathChanged={this.handleTestPathChanged}\n              submitTest={this.submitTest}\n          ></AddNewRequest>\n          <TestExecutionTable items={this.state.items} viewItemDetails={this.viewItemDetails}></TestExecutionTable>\n      </Aux>\n    )\n  }\n}\n\nexport default IONOSTestExecutor;\n","import React from 'react';\r\nimport IONOSTestExecutor from \"./containers/IONOSTestExecutor/IONOSTestExecutor\";\r\n\r\nfunction App() {\r\n  return (\r\n\r\n      <div>\r\n          <IONOSTestExecutor></IONOSTestExecutor>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}